1. SWIFT basics
	1. Comments
	2. Strings (interpolation, substring search etc.)
	3. Collections (enum, tuple, dictionary, array, set)
	4. Struct vs Class (value and reference types)
	5. If (тернарный), for, while, switch, guard
	6. Basic operators
	7. Optionals (including .none, .some)
	8. Initialisators and Deinitialisators
	9. Inheritance, Protocols
	10. Computed properties (get, set)
	11. Lazy properties
	12. Type checking and type casting
	13. Extensions
	14. Static и class keywords
	15. Functions (including mutating, inout)
	16. Access levels
	17. Error handling (do-catch block)
	18. Delegation, notifications in code, closures
	19. Property observers (didSet, willSet)
	20. Date, Calendar, DateFormatter and how to work with dates and strings
2. UIKit
	1. Layout with Interface builder
	2. Layout with constratints, autoLayout	
	3. UIViewController lifecycle
	4. Simple animation
	5. Drawing 
	6. UITableView(-Controller), UICollectionView(-Controller)
	7. Navigation between ViewControllers, UINavigationViewController
	8. UIScrollView(-Controller)
	9. UITextField, UIButton, UILabel, UIView
	10. Creating new classes based on UIView (or any of it's inheritors)
	11. UIAlertController
	12. UIGestureRecognizer
3. Playground
4. Project configuring, Info.plist
5. iOS application lifecycle
6. App localisation
7. Work with AppStore and TestFlight
8. Know how to connect third-party library (CocoaPods, SPM) and to be able to understand it's documentation
9. Debugging, installing your app on device and simulator
10. Concurrent computing basics, multi-threading (DispatchQueue, deadlock, race condition, livelock)
11. Knoweldge about architechure patterns (MVC, MVP, MVVM)
12. Skill to use documentation, stack overflow, open API documentation
13. Strong, weak and unowned links, ARC, memory leaks
14. What is map(), flatMap() and compactMap()
15. Stoding data in UserDefaults, CoreData and Keychain
16. Основы HTTP запросов, JSON, умение пользоваться Alamofire или URLSession
17. XCTesting, Unit tests, UI tests
18. Git basics
19. OOP basics
20. Software design patterns and algorithms basics (their complexity, sorting examples)
21. Understanding software development process. Agile, Scrum, Kanban. Knowing process participants, thir roles and technologies. CI/CD
22. Common knowledge about points from middle-skills list
